"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * A namespaced client for the
 * `/v1/travel/analytics/air-traffic/searched/by-destination` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.travel.analytics.AirTraffic.SearchedByDestination;
 * ```
 *
 * @param {Client} client
 */
var SearchedByDestination =
/*#__PURE__*/
function () {
  function SearchedByDestination(client) {
    _classCallCheck(this, SearchedByDestination);

    this.client = client;
  }
  /**
   * Returns a list of air traffic reports based on the number of people searching.
   *
   * @param {Object} params
   * @param {string} params.originCityCode IATA code of the origin city - e.g. MAD for
   *   Madrid - required
   * @param {string} params.destinationCityCode IATA code of the destination city - e.g. NYC for
   *   New-York - required
   * @param {string} params.searchPeriod period when consumers are travelling in
   *   YYYY-MM format
   * @param {string} params.marketCountryCode IATA code of the country from which searches were made
   *   e.g. ``"ES"`` for Spain
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * How many people in Spain searched for a trip from Madrid to New-York in September 2017?
   *
   * ```js
   * amadeus.travel.analytics.AirTraffic.SearchedByDestination.get({
   *   originCityCode: 'MAD',
   *   destinationCityCode: 'NYC',
   *   searchPeriod: '2017-08',
   *   marketCountryCode: 'ES'
   * });
   * ```
   */


  _createClass(SearchedByDestination, [{
    key: "get",
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.client.get('/v1/travel/analytics/air-traffic/searched/by-destination', params);
    }
  }]);

  return SearchedByDestination;
}();

var _default = SearchedByDestination;
exports["default"] = _default;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvdHJhdmVsL2FuYWx5dGljcy9haXJfdHJhZmZpYy9zZWFyY2hlZF9ieV9kZXN0aW5hdGlvbi5qcyJdLCJuYW1lcyI6WyJTZWFyY2hlZEJ5RGVzdGluYXRpb24iLCJjbGllbnQiLCJwYXJhbXMiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFNQSxxQjs7O0FBQ0osaUNBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFDbEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBeUJpQjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTtBQUNmLGFBQU8sS0FBS0QsTUFBTCxDQUFZRSxHQUFaLENBQWdCLDBEQUFoQixFQUE0RUQsTUFBNUUsQ0FBUDtBQUNEOzs7Ozs7ZUFHWUYscUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92MS90cmF2ZWwvYW5hbHl0aWNzL2Fpci10cmFmZmljL3NlYXJjaGVkL2J5LWRlc3RpbmF0aW9uYCBlbmRwb2ludHNcbiAqXG4gKiBBY2Nlc3MgdmlhIHRoZSB7QGxpbmsgQW1hZGV1c30gb2JqZWN0XG4gKlxuICogYGBganNcbiAqIGxldCBhbWFkZXVzID0gbmV3IEFtYWRldXMoKTtcbiAqIGFtYWRldXMudHJhdmVsLmFuYWx5dGljcy5BaXJUcmFmZmljLlNlYXJjaGVkQnlEZXN0aW5hdGlvbjtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7Q2xpZW50fSBjbGllbnRcbiAqL1xuY2xhc3MgU2VhcmNoZWRCeURlc3RpbmF0aW9uIHtcbiAgY29uc3RydWN0b3IoY2xpZW50KSB7XG4gICAgdGhpcy5jbGllbnQgPSBjbGllbnQ7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIGxpc3Qgb2YgYWlyIHRyYWZmaWMgcmVwb3J0cyBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIHBlb3BsZSBzZWFyY2hpbmcuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5vcmlnaW5DaXR5Q29kZSBJQVRBIGNvZGUgb2YgdGhlIG9yaWdpbiBjaXR5IC0gZS5nLiBNQUQgZm9yXG4gICAqICAgTWFkcmlkIC0gcmVxdWlyZWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5kZXN0aW5hdGlvbkNpdHlDb2RlIElBVEEgY29kZSBvZiB0aGUgZGVzdGluYXRpb24gY2l0eSAtIGUuZy4gTllDIGZvclxuICAgKiAgIE5ldy1Zb3JrIC0gcmVxdWlyZWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5zZWFyY2hQZXJpb2QgcGVyaW9kIHdoZW4gY29uc3VtZXJzIGFyZSB0cmF2ZWxsaW5nIGluXG4gICAqICAgWVlZWS1NTSBmb3JtYXRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5tYXJrZXRDb3VudHJ5Q29kZSBJQVRBIGNvZGUgb2YgdGhlIGNvdW50cnkgZnJvbSB3aGljaCBzZWFyY2hlcyB3ZXJlIG1hZGVcbiAgICogICBlLmcuIGBgXCJFU1wiYGAgZm9yIFNwYWluXG4gICAqIEByZXR1cm4ge1Byb21pc2UuPFJlc3BvbnNlLFJlc3BvbnNlRXJyb3I+fSBhIFByb21pc2VcbiAgICpcbiAgICogSG93IG1hbnkgcGVvcGxlIGluIFNwYWluIHNlYXJjaGVkIGZvciBhIHRyaXAgZnJvbSBNYWRyaWQgdG8gTmV3LVlvcmsgaW4gU2VwdGVtYmVyIDIwMTc/XG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGFtYWRldXMudHJhdmVsLmFuYWx5dGljcy5BaXJUcmFmZmljLlNlYXJjaGVkQnlEZXN0aW5hdGlvbi5nZXQoe1xuICAgKiAgIG9yaWdpbkNpdHlDb2RlOiAnTUFEJyxcbiAgICogICBkZXN0aW5hdGlvbkNpdHlDb2RlOiAnTllDJyxcbiAgICogICBzZWFyY2hQZXJpb2Q6ICcyMDE3LTA4JyxcbiAgICogICBtYXJrZXRDb3VudHJ5Q29kZTogJ0VTJ1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBnZXQocGFyYW1zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0KCcvdjEvdHJhdmVsL2FuYWx5dGljcy9haXItdHJhZmZpYy9zZWFyY2hlZC9ieS1kZXN0aW5hdGlvbicsIHBhcmFtcyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VhcmNoZWRCeURlc3RpbmF0aW9uOyJdfQ==